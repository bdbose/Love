{"version":3,"sources":["assets/card.png","assets/01_1400.webp","assets/09.jpg","assets/music.mp3","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Text","msg","style","sleep","milliseconds","Promise","resolve","setTimeout","Alert","props","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","Main","Click","e","console","log","pageX","pageY","ReactDOM","render","id","height","src","test","alt","document","getElementById","top","left","useState","rand","setRand","update","setUpdate","random","a","Math","floor","useEffect","window","addEventListener","Notify","setNotify","sound","setSound","classes","React","open","setOpen","handleClick","handleClose","event","reason","down","URL","createObjectURL","Blob","card","link","createElement","href","setAttribute","body","appendChild","click","className","backmusic","onLoadStart","target","play","back","onClick","placeholder","onKeyUp","keyCode","data","value","Gift","pause","Snackbar","autoHideDuration","onClose","severity","App","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10c23ec8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card.27abe67d.png\";","module.exports = __webpack_public_path__ + \"static/media/01_1400.2064d073.webp\";","module.exports = __webpack_public_path__ + \"static/media/09.a8a8e2d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/music.75a76f3e.mp3\";","/** @format */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport test from '../assets/01_1400.webp';\r\nimport back from '../assets/09.jpg';\r\nimport './style.css';\r\nimport ReactDOM from 'react-dom';\r\nimport backmusic from '../assets/music.mp3';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport card from '../assets/card.png';\r\nconst Text = [\r\n\t{\r\n\t\tmsg: 'Happy 2 Years Anniversary!',\r\n\t\tstyle: '',\r\n\t},\r\n\t{\r\n\t\tmsg: 'I Love You\\nSharmistha!',\r\n\t\tstyle: '',\r\n\t},\r\n\t{\r\n\t\tmsg: 'You Are My Everything \\n My Soul \\n My Nabu Jaan',\r\n\t\tstyle: '',\r\n\t},\r\n];\r\n\r\nconst sleep = (milliseconds) => {\r\n\treturn new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n};\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\t'& > * + *': {\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n}));\r\nconst Main = () => {\r\n\tconst Click = (e) => {\r\n\t\tconsole.log(e.pageX, e.pageY);\r\n\t\tReactDOM.render(\r\n\t\t\t<img id='mochamilk' height='200px' src={test} alt='' />,\r\n\t\t\tdocument.getElementById('float')\r\n\t\t);\r\n\r\n\t\tdocument.getElementById('float').style.top = e.pageY + 'px';\r\n\t\tdocument.getElementById('float').style.left = e.pageX + 'px';\r\n\t};\r\n\tconst [rand, setRand] = useState(0);\r\n\tconst [update, setUpdate] = useState(0);\r\n\tconst random = async () => {\r\n\t\tawait sleep(2000);\r\n\t\tsetUpdate(Math.random());\r\n\t\tsetRand(Math.floor(Math.random() * 3));\r\n\t};\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('load', random());\r\n\t}, [update]);\r\n\r\n\tconst [Notify, setNotify] = useState('');\r\n\tconst Gift = () => {\r\n\t\tconst data = document.getElementById('inpt').value;\r\n\t\tif (data === '310818' || data === '31082018') {\r\n\t\t\tsetNotify('Ayy You Won The Gift!');\r\n\t\t\tconsole.log(Notify);\r\n\t\t\thandleClick();\r\n\t\t\tdocument.getElementById('inpt').value = '';\r\n\t\t\tdown();\r\n\t\t} else if (data === '060599' || data === '06051999') {\r\n\t\t\tsetNotify('Chummu nao Babuu');\r\n\t\t\tconsole.log(Notify);\r\n\t\t\thandleClick();\r\n\t\t\tdocument.getElementById('inpt').value = '';\r\n\t\t} else if (data === '020400' || data === '02042000') {\r\n\t\t\tsetNotify('Sharmistha Amar Nabu!\\nTumi Amr Shonna');\r\n\t\t\tconsole.log(Notify);\r\n\t\t\thandleClick();\r\n\r\n\t\t\tdocument.getElementById('inpt').value = '';\r\n\t\t} else {\r\n\t\t\tsetNotify('Bhabo Bhabo ro Bhabo');\r\n\t\t\tconsole.log(Notify);\r\n\t\t\thandleClick();\r\n\t\t}\r\n\t};\r\n\tconst [sound, setSound] = useState('Off');\r\n\r\n\tconst classes = useStyles();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst down = () => {\r\n\t\tconst url = window.URL.createObjectURL(new Blob([card]));\r\n\t\tconst link = document.createElement('a');\r\n\t\tlink.href = card;\r\n\t\tlink.setAttribute('download', 'Card.png');\r\n\t\tdocument.body.appendChild(link);\r\n\t\tlink.click();\r\n\t};\r\n\treturn (\r\n\t\t<div className='main-wrapper'>\r\n\t\t\t<audio\r\n\t\t\t\tid='back-music'\r\n\t\t\t\tsrc={backmusic}\r\n\t\t\t\tonLoadStart={(e) => e.target.play()}\r\n\t\t\t/>\r\n\t\t\t<img src={back} id='background' alt='' onClick={(e) => Click(e)} />\r\n\t\t\t<div className='container' onClick={(e) => Click(e)}>\r\n\t\t\t\t{Text[rand].msg}\r\n\t\t\t</div>\r\n\t\t\t<div id='float'></div>\r\n\t\t\t<div className='secret'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid='inpt'\r\n\t\t\t\t\tplaceholder='Enter Some Dates!'\r\n\t\t\t\t\tonKeyUp={(e) => {\r\n\t\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\t\tGift();\r\n\t\t\t\t\t\t\te = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName='sound'\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (sound === 'On') {\r\n\t\t\t\t\t\tdocument.getElementById('back-music').pause();\r\n\t\t\t\t\t\tsetSound('Off');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdocument.getElementById('back-music').play();\r\n\t\t\t\t\t\tsetSound('On');\r\n\t\t\t\t\t}\r\n\t\t\t\t}}>\r\n\t\t\t\tSound : {sound}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity='success'>\r\n\t\t\t\t\t\t{Notify}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Main;\r\n","/** @format */\n\nimport React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n\treturn <Main />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}